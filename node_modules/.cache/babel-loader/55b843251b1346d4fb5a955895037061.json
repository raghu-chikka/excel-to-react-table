{"ast":null,"code":"var _jsxFileName = \"H:\\\\DigiKull Front-End\\\\FrontEndDev\\\\FrontEndDev2\\\\ennea-assignment\\\\exceltoreacttable\\\\src\\\\components\\\\Readfile.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from \"react-bootstrap/Button\";\nimport React, { useRef, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport XLSX from \"xlsx\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Readfile = () => {\n  _s();\n\n  const [sheetitems, setSheetitems] = useState([]);\n\n  const readExcelFile = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const workBook = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const worksheetname = workBook.SheetNames[0];\n        const workSheet = workBook.Sheets[worksheetname];\n        const data = XLSX.utils.sheet_to_json(workSheet);\n        resolve(data);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n    promise.then(data => {\n      setSheetitems(data);\n    });\n  };\n\n  const pdfExportComponent = useRef(null);\n\n  const generatePDF = event => {\n    pdfExportComponent.current.save();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputFile\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => {\n            const file = e.target.files[0];\n            readExcelFile(file);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tableContent\",\n      children: [/*#__PURE__*/_jsxDEV(PDFExport, {\n        ref: pdfExportComponent,\n        scale: 0.3,\n        paperSize: \"A4\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"tableStyle\",\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sx\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Invoice Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Invoice Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Packing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actual Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sheetitems.map((newitem, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: newitem.C\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: newitem.D\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: newitem.F\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: newitem.G\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: newitem.O\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: parseFloat(newitem.U)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: parseFloat(newitem.U * newitem.O).toFixed(4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: generatePDF,\n          type: \"primary\",\n          children: \"Save to PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Readfile, \"XLaqEKopztxGeMib3sjDi7iz+vo=\");\n\n_c = Readfile;\nexport default Readfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Readfile\");","map":{"version":3,"sources":["H:/DigiKull Front-End/FrontEndDev/FrontEndDev2/ennea-assignment/exceltoreacttable/src/components/Readfile.jsx"],"names":["Button","React","useRef","useState","Table","XLSX","html2canvas","jsPDF","PDFExport","savePDF","Readfile","sheetitems","setSheetitems","readExcelFile","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","workBook","read","type","worksheetname","SheetNames","workSheet","Sheets","data","utils","sheet_to_json","onerror","error","then","pdfExportComponent","generatePDF","event","current","save","files","map","newitem","index","C","D","F","G","O","parseFloat","U","toFixed"],"mappings":"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","sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport XLSX from \"xlsx\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\n\r\nconst Readfile = () => {\r\n  const [sheetitems, setSheetitems] = useState([]);\r\n\r\n  const readExcelFile = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n        const workBook = XLSX.read(bufferArray, { type: \"buffer\" });\r\n        const worksheetname = workBook.SheetNames[0];\r\n        const workSheet = workBook.Sheets[worksheetname];\r\n        const data = XLSX.utils.sheet_to_json(workSheet);\r\n        resolve(data);\r\n      };\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n    promise.then((data) => {\r\n      setSheetitems(data);\r\n    });\r\n  };\r\n\r\n  const pdfExportComponent = useRef(null);\r\n  const generatePDF = (event) => {\r\n    pdfExportComponent.current.save();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"inputFile\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            readExcelFile(file);\r\n          }}\r\n        />\r\n        </div>\r\n      </div>\r\n      <div id=\"tableContent\">\r\n        <PDFExport ref={pdfExportComponent} scale={0.3}\r\n        paperSize=\"A4\"\r\n        >\r\n          <Table className=\"tableStyle\" striped bordered hover size=\"sx\">\r\n            <thead>\r\n              <tr>\r\n                <th>Invoice Number</th>\r\n                <th>Invoice Date</th>\r\n                <th>Product Name</th>\r\n                <th>Packing</th>\r\n                <th>Actual Rate</th>\r\n                <th>Quantity</th>\r\n                <th>Product Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sheetitems.map((newitem, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{newitem.C}</td>\r\n                    <td>{newitem.D}</td>\r\n                    <td>{newitem.F}</td>\r\n                    <td>{newitem.G}</td>\r\n                    <td>{newitem.O}</td>\r\n                    <td>{parseFloat(newitem.U)}</td>\r\n                    <td>{parseFloat(newitem.U * newitem.O).toFixed(4)}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </PDFExport>\r\n        <div className=\"button\">\r\n          <Button\r\n            variant=\"outline-success\"\r\n            onClick={generatePDF}\r\n            type=\"primary\"\r\n          >\r\n            Save to PDF\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Readfile;\r\n"]},"metadata":{},"sourceType":"module"}