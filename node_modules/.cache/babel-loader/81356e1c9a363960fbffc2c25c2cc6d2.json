{"ast":null,"code":"var _jsxFileName = \"H:\\\\DigiKull Front-End\\\\FrontEndDev\\\\FrontEndDev2\\\\ennea-assignment\\\\exceltoreacttable\\\\src\\\\components\\\\Readfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Readfile = () => {\n  _s();\n\n  const [sheetitems, setSheetitems] = useState([]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          const file = e.target.files[0];\n          readExcelFile(file);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Invoice Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Invoice Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Packing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actual Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sheetitems.map((newitem, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: newitem.C\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: newitem.D\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: newitem.F\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: newitem.G\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: newitem.O\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: newitem.U\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [parseFloat(newitem.U), parseFloat(newitem.O)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Readfile, \"gljkdXa5CFNRaR8KDQHLiCMEe6Y=\");\n\n_c = Readfile;\nexport default Readfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Readfile\");","map":{"version":3,"sources":["H:/DigiKull Front-End/FrontEndDev/FrontEndDev2/ennea-assignment/exceltoreacttable/src/components/Readfile.jsx"],"names":["React","useState","Table","XLSX","Readfile","sheetitems","setSheetitems","useEffect","e","file","target","files","readExcelFile","map","newitem","index","C","D","F","G","O","U","parseFloat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAM,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,gBAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAC,UAAAA,aAAa,CAACH,IAAD,CAAb;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,IAAI,EAAC,IAAnC;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA,oBACGJ,UAAU,CAACQ,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAClC,gCACE;AAAA,sCACE;AAAA,0BAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,0BAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,0BAAKJ,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA,0BAAKL,OAAO,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA,0BAAKN,OAAO,CAACO;AAAb;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAA,2BACGC,UAAU,CAACR,OAAO,CAACO,CAAT,CADb,EAC0BC,UAAU,CAACR,OAAO,CAACM,CAAT,CADpC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA,eAASL,KAAT;AAAA;AAAA;AAAA;AAAA,oBADF;AAaD,WAdA;AADH;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AA6CD,CAtDD;;GAAMX,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport XLSX from \"xlsx\";\r\n\r\nconst Readfile = () => {\r\n  const [sheetitems, setSheetitems] = useState([]);\r\n\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            readExcelFile(file);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Invoice Number</th>\r\n              <th>Invoice Date</th>\r\n              <th>Product Name</th>\r\n              <th>Packing</th>\r\n              <th>Actual Rate</th>\r\n              <th>Quantity</th>\r\n              <th>Product Value</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sheetitems.map((newitem, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{newitem.C}</td>\r\n                  <td>{newitem.D}</td>\r\n                  <td>{newitem.F}</td>\r\n                  <td>{newitem.G}</td>\r\n                  <td>{newitem.O}</td>\r\n                  <td>{newitem.U}</td>\r\n                  <td>\r\n                    {parseFloat(newitem.U)}{parseFloat(newitem.O)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Readfile;\r\n"]},"metadata":{},"sourceType":"module"}