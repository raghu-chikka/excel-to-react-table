{"ast":null,"code":"import React, { useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport XLSX from 'xlsx';\n\nfunction Upload() {\n  const fileUpload = document.getElementById('fileUpload');\n  const regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n\n  if (regex.test(fileUpload.value.toLowerCase())) {\n    let fileName = fileUpload.files[0].name;\n\n    if (typeof FileReader !== 'undefined') {\n      const reader = new FileReader();\n\n      if (reader.readAsBinaryString) {\n        reader.onload = e => {\n          processExcel(reader.result);\n        };\n\n        reader.readAsBinaryString(fileUpload.files[0]);\n      }\n    } else {\n      console.log(\"This browser does not support HTML5.\");\n    }\n  } else {\n    console.log(\"Please upload a valid Excel file.\");\n  }\n}\n\n_c = Upload;\n\nfunction processExcel(data) {\n  const workbook = XLSX.read(data, {\n    type: 'binary'\n  });\n  const firstSheet = workbook.SheetNames[0];\n  const excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);\n  console.log(excelRows);\n}\n\nexport default Readfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["H:/DigiKull Front-End/FrontEndDev/FrontEndDev2/ennea-assignment/exceltoreacttable/src/components/Readfile.js"],"names":["React","useState","Table","XLSX","Upload","fileUpload","document","getElementById","regex","test","value","toLowerCase","fileName","files","name","FileReader","reader","readAsBinaryString","onload","e","processExcel","result","console","log","data","workbook","read","type","firstSheet","SheetNames","excelRows","utils","sheet_to_row_object_array","Sheets","Readfile"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAMC,UAAU,GAAIC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;AACA,QAAMC,KAAK,GAAG,uCAAd;;AACA,MAAIA,KAAK,CAACC,IAAN,CAAWJ,UAAU,CAACK,KAAX,CAAiBC,WAAjB,EAAX,CAAJ,EAAgD;AAC5C,QAAIC,QAAQ,GAAGP,UAAU,CAACQ,KAAX,CAAiB,CAAjB,EAAoBC,IAAnC;;AACA,QAAI,OAAQC,UAAR,KAAwB,WAA5B,EAAyC;AACrC,YAAMC,MAAM,GAAG,IAAID,UAAJ,EAAf;;AACA,UAAIC,MAAM,CAACC,kBAAX,EAA+B;AAC3BD,QAAAA,MAAM,CAACE,MAAP,GAAiBC,CAAD,IAAO;AACnBC,UAAAA,YAAY,CAACJ,MAAM,CAACK,MAAR,CAAZ;AACH,SAFD;;AAGAL,QAAAA,MAAM,CAACC,kBAAP,CAA0BZ,UAAU,CAACQ,KAAX,CAAiB,CAAjB,CAA1B;AACH;AACJ,KARD,MAQO;AACHS,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AACJ,GAbD,MAaO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;AACJ;;KAnBQnB,M;;AAqBT,SAASgB,YAAT,CAAsBI,IAAtB,EAA4B;AACxB,QAAMC,QAAQ,GAAGtB,IAAI,CAACuB,IAAL,CAAUF,IAAV,EAAgB;AAACG,IAAAA,IAAI,EAAE;AAAP,GAAhB,CAAjB;AACA,QAAMC,UAAU,GAAGH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAnB;AACA,QAAMC,SAAS,GAAG3B,IAAI,CAAC4B,KAAL,CAAWC,yBAAX,CAAqCP,QAAQ,CAACQ,MAAT,CAAgBL,UAAhB,CAArC,CAAlB;AAEAN,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACH;;AAED,eAAeI,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport XLSX from 'xlsx';\r\n\r\nfunction Upload() {\r\n    const fileUpload = (document.getElementById('fileUpload'));\r\n    const regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\r\n    if (regex.test(fileUpload.value.toLowerCase())) {\r\n        let fileName = fileUpload.files[0].name;\r\n        if (typeof (FileReader) !== 'undefined') {\r\n            const reader = new FileReader();\r\n            if (reader.readAsBinaryString) {\r\n                reader.onload = (e) => {\r\n                    processExcel(reader.result);\r\n                };\r\n                reader.readAsBinaryString(fileUpload.files[0]);\r\n            }\r\n        } else {\r\n            console.log(\"This browser does not support HTML5.\");\r\n        }\r\n    } else {\r\n        console.log(\"Please upload a valid Excel file.\");\r\n    }\r\n}\r\n\r\nfunction processExcel(data) {\r\n    const workbook = XLSX.read(data, {type: 'binary'});\r\n    const firstSheet = workbook.SheetNames[0];\r\n    const excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);\r\n\r\n    console.log(excelRows);\r\n}\r\n\r\nexport default Readfile;\r\n"]},"metadata":{},"sourceType":"module"}