{"ast":null,"code":"var _jsxFileName = \"H:\\\\DigiKull Front-End\\\\FrontEndDev\\\\FrontEndDev2\\\\ennea-assignment\\\\exceltoreacttable\\\\src\\\\components\\\\Readfile.js\";\nimport React from 'react';\nimport XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Readfile = () => {\n  const readExcelFile = file => {\n    const promise = new Promise((reslve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const workBook = XLSX.read(bufferArray, {\n          type: 'buffer'\n        });\n        const worksheetname = workBook.SheetNames[0];\n        const workSheet = workBook;\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        const file = e.target.files[0];\n        readExcelFile(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Readfile;\nexport default Readfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Readfile\");","map":{"version":3,"sources":["H:/DigiKull Front-End/FrontEndDev/FrontEndDev2/ennea-assignment/exceltoreacttable/src/components/Readfile.js"],"names":["React","XLSX","Readfile","readExcelFile","file","promise","Promise","reslve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","workBook","read","type","worksheetname","SheetNames","workSheet","files"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAE5B,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,CAACC,MAAD,EAASC,MAAT,KAAkB;AAC3C,YAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,MAAAA,UAAU,CAACE,iBAAX,CAA6BP,IAA7B;;AAEAK,MAAAA,UAAU,CAACG,MAAX,GAAmBC,CAAD,IAAK;AACnB,cAAMC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASC,MAA7B;AAEA,cAAMC,QAAQ,GAAGhB,IAAI,CAACiB,IAAL,CAAUJ,WAAV,EAAuB;AAACK,UAAAA,IAAI,EAAE;AAAP,SAAvB,CAAjB;AACA,cAAMC,aAAa,GAAGH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAtB;AACA,cAAMC,SAAS,GAAGL,QAAlB;AACH,OAND;AAOH,KAXe,CAAhB;AAYH,GAdD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGJ,CAAD,IAAK;AAC9B,cAAMT,IAAI,GAAGS,CAAC,CAACE,MAAF,CAASQ,KAAT,CAAe,CAAf,CAAb;AACApB,QAAAA,aAAa,CAACC,IAAD,CAAb;AACH;AAHD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;KAAMF,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport XLSX from 'xlsx';\r\n\r\nconst Readfile = () => {\r\n\r\n    const readExcelFile = (file) => {\r\n\r\n        const promise = new Promise ((reslve, reject)=>{\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file)\r\n\r\n            fileReader.onload=(e)=>{\r\n                const bufferArray = e.target.result;\r\n\r\n                const workBook = XLSX.read(bufferArray, {type: 'buffer'});\r\n                const worksheetname = workBook.SheetNames[0];\r\n                const workSheet = workBook\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <input type=\"file\" onChange={(e)=>{\r\n                const file = e.target.files[0];\r\n                readExcelFile(file);\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Readfile;\r\n"]},"metadata":{},"sourceType":"module"}